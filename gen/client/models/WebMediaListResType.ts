/* tslint:disable */
/* eslint-disable */
/**
 * TGMon API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesMediaFileDoc } from './TypesMediaFileDoc';
import {
    TypesMediaFileDocFromJSON,
    TypesMediaFileDocFromJSONTyped,
    TypesMediaFileDocToJSON,
    TypesMediaFileDocToJSONTyped,
} from './TypesMediaFileDoc';

/**
 * 
 * @export
 * @interface WebMediaListResType
 */
export interface WebMediaListResType {
    /**
     * 
     * @type {Array<TypesMediaFileDoc>}
     * @memberof WebMediaListResType
     */
    media?: Array<TypesMediaFileDoc>;
    /**
     * 
     * @type {number}
     * @memberof WebMediaListResType
     */
    total?: number;
}

/**
 * Check if a given object implements the WebMediaListResType interface.
 */
export function instanceOfWebMediaListResType(value: object): value is WebMediaListResType {
    return true;
}

export function WebMediaListResTypeFromJSON(json: any): WebMediaListResType {
    return WebMediaListResTypeFromJSONTyped(json, false);
}

export function WebMediaListResTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebMediaListResType {
    if (json == null) {
        return json;
    }
    return {
        
        'media': json['Media'] == null ? undefined : ((json['Media'] as Array<any>).map(TypesMediaFileDocFromJSON)),
        'total': json['Total'] == null ? undefined : json['Total'],
    };
}

export function WebMediaListResTypeToJSON(json: any): WebMediaListResType {
    return WebMediaListResTypeToJSONTyped(json, false);
}

export function WebMediaListResTypeToJSONTyped(value?: WebMediaListResType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Media': value['media'] == null ? undefined : ((value['media'] as Array<any>).map(TypesMediaFileDocToJSON)),
        'Total': value['total'],
    };
}

