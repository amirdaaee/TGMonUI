/* tslint:disable */
/* eslint-disable */
/**
 * TGMon API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesMediaFileDoc } from './TypesMediaFileDoc';
import {
    TypesMediaFileDocFromJSON,
    TypesMediaFileDocFromJSONTyped,
    TypesMediaFileDocToJSON,
    TypesMediaFileDocToJSONTyped,
} from './TypesMediaFileDoc';

/**
 * 
 * @export
 * @interface WebMediaReadResType
 */
export interface WebMediaReadResType {
    /**
     * 
     * @type {TypesMediaFileDoc}
     * @memberof WebMediaReadResType
     */
    media?: TypesMediaFileDoc;
    /**
     * 
     * @type {string}
     * @memberof WebMediaReadResType
     */
    nextID?: string;
    /**
     * 
     * @type {string}
     * @memberof WebMediaReadResType
     */
    pervID?: string;
}

/**
 * Check if a given object implements the WebMediaReadResType interface.
 */
export function instanceOfWebMediaReadResType(value: object): value is WebMediaReadResType {
    return true;
}

export function WebMediaReadResTypeFromJSON(json: any): WebMediaReadResType {
    return WebMediaReadResTypeFromJSONTyped(json, false);
}

export function WebMediaReadResTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebMediaReadResType {
    if (json == null) {
        return json;
    }
    return {
        
        'media': json['Media'] == null ? undefined : TypesMediaFileDocFromJSON(json['Media']),
        'nextID': json['nextID'] == null ? undefined : json['nextID'],
        'pervID': json['pervID'] == null ? undefined : json['pervID'],
    };
}

export function WebMediaReadResTypeToJSON(json: any): WebMediaReadResType {
    return WebMediaReadResTypeToJSONTyped(json, false);
}

export function WebMediaReadResTypeToJSONTyped(value?: WebMediaReadResType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Media': TypesMediaFileDocToJSON(value['media']),
        'nextID': value['nextID'],
        'pervID': value['pervID'],
    };
}

