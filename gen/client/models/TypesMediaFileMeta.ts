/* tslint:disable */
/* eslint-disable */
/**
 * TGMon API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TypesMediaFileMeta
 */
export interface TypesMediaFileMeta {
    /**
     * 
     * @type {number}
     * @memberof TypesMediaFileMeta
     */
    duration?: number;
    /**
     * 
     * @type {number}
     * @memberof TypesMediaFileMeta
     */
    fileID?: number;
    /**
     * 
     * @type {string}
     * @memberof TypesMediaFileMeta
     */
    fileName?: string;
    /**
     * 
     * @type {number}
     * @memberof TypesMediaFileMeta
     */
    fileSize?: number;
    /**
     * 
     * @type {string}
     * @memberof TypesMediaFileMeta
     */
    mimeType?: string;
}

/**
 * Check if a given object implements the TypesMediaFileMeta interface.
 */
export function instanceOfTypesMediaFileMeta(value: object): value is TypesMediaFileMeta {
    return true;
}

export function TypesMediaFileMetaFromJSON(json: any): TypesMediaFileMeta {
    return TypesMediaFileMetaFromJSONTyped(json, false);
}

export function TypesMediaFileMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesMediaFileMeta {
    if (json == null) {
        return json;
    }
    return {
        
        'duration': json['Duration'] == null ? undefined : json['Duration'],
        'fileID': json['FileID'] == null ? undefined : json['FileID'],
        'fileName': json['FileName'] == null ? undefined : json['FileName'],
        'fileSize': json['FileSize'] == null ? undefined : json['FileSize'],
        'mimeType': json['MimeType'] == null ? undefined : json['MimeType'],
    };
}

export function TypesMediaFileMetaToJSON(json: any): TypesMediaFileMeta {
    return TypesMediaFileMetaToJSONTyped(json, false);
}

export function TypesMediaFileMetaToJSONTyped(value?: TypesMediaFileMeta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Duration': value['duration'],
        'FileID': value['fileID'],
        'FileName': value['fileName'],
        'FileSize': value['fileSize'],
        'MimeType': value['mimeType'],
    };
}

